% ========================================================================
% TESTE DO SISTEMA DE EXTRA√á√ÉO DE DADOS EXPERIMENTAIS
% ========================================================================
% 
% AUTOR: Heitor Oliveira Gon√ßalves
% LinkedIn: https://www.linkedin.com/in/heitorhog/
% Data: Agosto 2025
% Vers√£o: 1.0
%
% DESCRI√á√ÉO:
%   Script para testar e demonstrar o sistema de extra√ß√£o de dados
%   experimentais para o artigo cient√≠fico sobre detec√ß√£o de corros√£o
% ========================================================================

clear; clc; close all;

fprintf('========================================================================\n');
fprintf('TESTE DO SISTEMA DE EXTRA√á√ÉO DE DADOS EXPERIMENTAIS\n');
fprintf('========================================================================\n\n');

try
    % Adicionar caminhos necess√°rios
    addpath(genpath('src'));
    addpath(genpath('utils'));
    
    % Criar inst√¢ncia do extrator
    fprintf('üîß Inicializando extrator de dados experimentais...\n');
    extrator = ExtratorDadosExperimentais('verbose', true);
    
    % Executar extra√ß√£o completa
    fprintf('\nüöÄ Iniciando extra√ß√£o completa de dados...\n');
    sucesso = extrator.extrairDadosCompletos();
    
    if sucesso
        fprintf('\n‚úÖ Extra√ß√£o conclu√≠da com sucesso!\n');
        
        % Salvar dados extra√≠dos
        fprintf('\nüíæ Salvando dados extra√≠dos...\n');
        extrator.salvarDadosExtraidos('dados/dados_experimentais_extraidos.mat');
        
        % Gerar relat√≥rio completo
        fprintf('\nüìÑ Gerando relat√≥rio completo...\n');
        extrator.gerarRelatorioCompleto('dados/relatorio_dados_experimentais.txt');
        
        % Exibir resumo dos resultados
        fprintf('\nüìä RESUMO DOS RESULTADOS EXTRA√çDOS:\n');
        fprintf('=====================================\n');
        
        % Verificar se temos dados de an√°lise estat√≠stica
        if ~isempty(extrator.analiseEstatistica) && isfield(extrator.analiseEstatistica, 'resumo')
            resumo = extrator.analiseEstatistica.resumo;
            
            fprintf('Modelo superior: %s\n', resumo.modelo_superior);
            fprintf('M√©tricas analisadas: %d\n', resumo.total_metricas);
            fprintf('Diferen√ßas significativas: %d (%.1f%%)\n', ...
                    resumo.metricas_significativas, resumo.percentual_significativo);
            
            if isfield(resumo, 'metrica_maior_diferenca')
                fprintf('M√©trica com maior diferen√ßa: %s (%.2f%%)\n', ...
                        resumo.metrica_maior_diferenca, resumo.maior_diferenca_percentual);
            end
        end
        
        % Mostrar caracter√≠sticas do dataset
        if ~isempty(extrator.caracteristicasDataset)
            ds = extrator.caracteristicasDataset;
            fprintf('\nDataset: %d imagens (%dx%d pixels)\n', ...
                    ds.total_imagens, ds.resolucao_processamento(1), ds.resolucao_processamento(2));
            fprintf('Material: %s\n', ds.material.tipo);
        end
        
        % Mostrar configura√ß√µes de treinamento
        if ~isempty(extrator.configuracaoTreinamento)
            cfg = extrator.configuracaoTreinamento;
            fprintf('\nTreinamento: %d √©pocas, batch size %d, LR %.4f\n', ...
                    cfg.epochs, cfg.batch_size, cfg.learning_rate);
        end
        
        fprintf('\nüéØ ARQUIVOS GERADOS:\n');
        fprintf('===================\n');
        fprintf('1. dados/dados_experimentais_extraidos.mat - Dados completos em formato MATLAB\n');
        fprintf('2. dados/relatorio_dados_experimentais.txt - Relat√≥rio detalhado em texto\n');
        
        fprintf('\n‚ú® Sistema de extra√ß√£o testado com sucesso!\n');
        fprintf('Os dados est√£o prontos para uso no artigo cient√≠fico.\n');
        
    else
        fprintf('\n‚ùå Erro na extra√ß√£o de dados!\n');
    end
    
catch ME
    fprintf('\n‚ùå ERRO NO TESTE: %s\n', ME.message);
    fprintf('Stack trace:\n');
    for i = 1:length(ME.stack)
        fprintf('  %s (linha %d)\n', ME.stack(i).name, ME.stack(i).line);
    end
end

fprintf('\n========================================================================\n');
fprintf('Fim do teste\n');
fprintf('========================================================================\n');