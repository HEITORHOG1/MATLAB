% ========================================================================
% GERAR TABELA DE CONFIGURA√á√ïES DE TREINAMENTO
% ========================================================================
% 
% AUTOR: Heitor Oliveira Gon√ßalves
% LinkedIn: https://www.linkedin.com/in/heitorhog/
% Data: Agosto 2025
% Vers√£o: 1.0
%
% DESCRI√á√ÉO:
%   Script principal para gerar a Tabela 2 do artigo cient√≠fico com
%   configura√ß√µes de treinamento, hiperpar√¢metros e especifica√ß√µes de hardware
%
% TASK: 19. Criar tabela 2: Configura√ß√µes de treinamento
% REQUIREMENTS: 6.5
% ========================================================================

clear; clc; close all;

fprintf('========================================================================\n');
fprintf('GERA√á√ÉO DA TABELA DE CONFIGURA√á√ïES DE TREINAMENTO\n');
fprintf('========================================================================\n\n');

try
    % Adicionar caminhos necess√°rios
    addpath(genpath('src'));
    addpath(genpath('utils'));
    
    % Criar inst√¢ncia do gerador
    fprintf('üîß Inicializando gerador de tabela de configura√ß√µes...\n');
    gerador = GeradorTabelaConfiguracoes('verbose', true);
    
    % Gerar tabela completa
    fprintf('\nüöÄ Gerando tabela de configura√ß√µes de treinamento...\n');
    sucesso = gerador.gerarTabelaCompleta();
    
    if sucesso
        fprintf('\n‚úÖ Tabela de configura√ß√µes gerada com sucesso!\n');
        
        % Gerar relat√≥rio
        fprintf('\nüìÑ Gerando relat√≥rio...\n');
        gerador.gerarRelatorio();
        
        % Exibir resumo
        fprintf('\nüìä RESUMO DA TABELA GERADA:\n');
        fprintf('===========================\n');
        
        fprintf('Arquivos gerados:\n');
        fprintf('1. tabelas/tabela_configuracoes_treinamento.tex - Tabela LaTeX para artigo\n');
        fprintf('2. tabelas/configuracoes_treinamento.txt - Vers√£o em texto\n');
        fprintf('3. tabelas/relatorio_tabela_configuracoes.txt - Relat√≥rio detalhado\n\n');
        
        fprintf('Configura√ß√µes documentadas:\n');
        fprintf('- Arquiteturas: U-Net Cl√°ssica e Attention U-Net\n');
        fprintf('- Hiperpar√¢metros: Otimizador, learning rate, √©pocas, batch size\n');
        fprintf('- Dataset: 414 imagens (70%% treino, 15%% valida√ß√£o, 15%% teste)\n');
        fprintf('- Hardware: CPU, RAM, GPU e especifica√ß√µes\n');
        fprintf('- Software: MATLAB R2023b, Deep Learning Toolbox\n\n');
        
        % Verificar se arquivos foram criados
        arquivos_esperados = {
            'tabelas/tabela_configuracoes_treinamento.tex';
            'tabelas/configuracoes_treinamento.txt';
            'tabelas/relatorio_tabela_configuracoes.txt'
        };
        
        arquivos_criados = 0;
        for i = 1:length(arquivos_esperados)
            if exist(arquivos_esperados{i}, 'file')
                arquivos_criados = arquivos_criados + 1;
                fprintf('‚úÖ %s\n', arquivos_esperados{i});
            else
                fprintf('‚ùå %s (n√£o encontrado)\n', arquivos_esperados{i});
            end
        end
        
        fprintf('\nArquivos criados: %d/%d\n', arquivos_criados, length(arquivos_esperados));
        
        if arquivos_criados == length(arquivos_esperados)
            fprintf('\nüéØ TASK 19 COMPLETADA COM SUCESSO! üéØ\n');
            fprintf('A Tabela 2 de configura√ß√µes de treinamento foi gerada e est√° pronta\n');
            fprintf('para integra√ß√£o no artigo cient√≠fico.\n\n');
            
            fprintf('PR√ìXIMOS PASSOS:\n');
            fprintf('1. Revisar o arquivo LaTeX gerado\n');
            fprintf('2. Integrar no documento principal (artigo_cientifico_corrosao.tex)\n');
            fprintf('3. Verificar formata√ß√£o e alinhamento na compila√ß√£o\n');
            fprintf('4. Validar informa√ß√µes t√©cnicas com dados reais do projeto\n');
        else
            fprintf('\n‚ö†Ô∏è Alguns arquivos n√£o foram criados corretamente.\n');
        end
        
    else
        fprintf('\n‚ùå Erro na gera√ß√£o da tabela de configura√ß√µes!\n');
    end
    
catch ME
    fprintf('\n‚ùå ERRO NO SCRIPT: %s\n', ME.message);
    fprintf('Stack trace:\n');
    for i = 1:length(ME.stack)
        fprintf('  %s (linha %d)\n', ME.stack(i).name, ME.stack(i).line);
    end
end

fprintf('\n========================================================================\n');
fprintf('Fim da gera√ß√£o da tabela de configura√ß√µes\n');
fprintf('========================================================================\n');