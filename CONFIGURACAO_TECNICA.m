% ========================================================================
% CONFIGURA√á√ÉO T√âCNICA DO PROJETO MATLAB
% ========================================================================
% 
% Este arquivo cont√©m configura√ß√µes t√©cnicas espec√≠ficas para o AI Assistant
% ler e entender o contexto do projeto antes de qualquer modifica√ß√£o.
%
% USO: Sempre ler este arquivo antes de modificar c√≥digo MATLAB
% ========================================================================

%% CONFIGURA√á√ïES CR√çTICAS DO PROJETO

% NOME DO PROJETO
projeto.nome = 'Comparacao U-Net vs Attention U-Net';
projeto.versao = '1.1';
projeto.status = 'FUNCIONAL_E_TESTADO';

% ARQUIVO PRINCIPAL (SEMPRE USAR ESTE)
projeto.arquivo_principal = 'executar_comparacao.m';

% IMPLEMENTA√á√ÉO DA ATTENTION U-NET (√öNICA VERS√ÉO FUNCIONAL)
projeto.attention_unet_funcional = 'create_working_attention_unet.m';

%% ARQUIVOS ESSENCIAIS (N√ÉO DELETAR)

arquivos_essenciais = {
    'executar_comparacao.m',              % Script principal
    'comparacao_unet_attention_final.m',  % Compara√ß√£o completa
    'converter_mascaras.m',               % Convers√£o m√°scaras
    'teste_dados_segmentacao.m',          % Teste dados
    'treinar_unet_simples.m',             % Teste r√°pido
    'create_working_attention_unet.m',    % Attention U-Net √öNICA
    'teste_attention_unet_real.m',        % Teste Attention U-Net
    'funcoes_auxiliares.m',               % Fun√ß√µes auxiliares
    'analise_metricas_detalhada.m',       % An√°lise m√©tricas
    'README.md',                          % Documenta√ß√£o
    'CONFIG_PROJETO.md',                  % Manual instru√ß√µes
    'CONFIGURACAO_TECNICA.m',             % Este arquivo
    '.gitignore',                         % Git
    'config_caminhos.mat',                % Config autom√°tica
    % Arquivos gerados automaticamente:
    'modelo_unet.mat',                    % Modelo treinado
    'resultados_comparacao.mat'           % Resultados
};

%% REGRAS DE DESENVOLVIMENTO

regras.NUNCA_FAZER = {
    'Criar novos arquivos de Attention U-Net',
    'Duplicar fun√ß√µes existentes',
    'Modificar create_working_attention_unet.m sem extrema necessidade',
    'Deletar arquivos sem verificar depend√™ncias',
    'Criar vers√µes alternativas dos scripts principais'
};

regras.SEMPRE_FAZER = {
    'Ler CONFIG_PROJETO.md antes de modificar',
    'Usar arquivos existentes como base',
    'Verificar depend√™ncias com grep_search antes de deletar',
    'Testar funcionalidade ap√≥s modifica√ß√µes',
    'Documentar mudan√ßas significativas'
};

%% DEPEND√äNCIAS CR√çTICAS

% Fun√ß√µes que DEVEM existir em funcoes_auxiliares.m
funcoes_criticas = {
    'carregar_dados_robustos',      % Carregamento dados
    'analisar_mascaras_automatico', % An√°lise m√°scaras  
    'configurar_projeto_inicial',   % Configura√ß√£o inicial
    'preprocessDataMelhorado',      % Preprocessamento
    'calcular_iou_simples',         % C√°lculo IoU
    'calcular_dice_simples',        % C√°lculo Dice
    'calcular_accuracy_simples'     % C√°lculo acur√°cia
};

% Scripts que dependem de outros
dependencias = containers.Map();
dependencias('executar_comparacao.m') = {
    'teste_dados_segmentacao.m',
    'converter_mascaras.m', 
    'treinar_unet_simples.m',
    'comparacao_unet_attention_final.m',
    'teste_attention_unet_real.m',
    'funcoes_auxiliares.m'
};

dependencias('comparacao_unet_attention_final.m') = {
    'create_working_attention_unet.m',
    'funcoes_auxiliares.m'
};

%% CONFIGURA√á√ïES PADR√ÉO

config_padrao.inputSize = [256, 256, 3];
config_padrao.numClasses = 2;
config_padrao.validationSplit = 0.2;
config_padrao.miniBatchSize = 8;
config_padrao.maxEpochs = 20;

% Configura√ß√£o para teste r√°pido
config_teste.numSamples = 50;
config_teste.maxEpochs = 5;
config_teste.miniBatchSize = 4;

%% PROBLEMAS CONHECIDOS E SOLU√á√ïES

problemas = struct();

% Problema 1: Attention U-Net n√£o funciona
problemas.attention_unet_erro.descricao = 'Erro na implementa√ß√£o attention gates';
problemas.attention_unet_erro.solucao = 'Usar create_working_attention_unet.m';
problemas.attention_unet_erro.nao_fazer = 'Criar nova implementa√ß√£o';

% Problema 2: Function not found
problemas.function_not_found.descricao = 'Refer√™ncia a arquivo deletado';
problemas.function_not_found.solucao = 'Verificar se arquivo existe';
problemas.function_not_found.verificar = 'funcoes_auxiliares.m tem todas fun√ß√µes';

% Problema 3: M√°scaras incompat√≠veis
problemas.mascaras_incompativeis.descricao = 'Formato incorreto m√°scaras';
problemas.mascaras_incompativeis.solucao = 'Usar op√ß√£o 2 menu (converter_mascaras)';
problemas.mascaras_incompativeis.formato = 'Valores 0 e 255';

% Problema 4: Erro de mem√≥ria
problemas.memoria_erro.descricao = 'Batch size muito grande';
problemas.memoria_erro.solucao = 'Reduzir miniBatchSize para 4 ou 2';
problemas.memoria_erro.nao_fazer = 'Aumentar amostras sem verificar RAM';

%% M√âTRICAS ESPERADAS

metricas.IoU.min = 0.85;
metricas.IoU.max = 0.92;
metricas.Dice.min = 0.92;
metricas.Dice.max = 0.96;
metricas.Accuracy.min = 0.85;
metricas.Accuracy.max = 0.95;

% Tempos esperados (CPU)
tempos.unet_minutos = 20;
tempos.attention_minutos = 25;
tempos.comparacao_total = 50;

% Diferen√ßa esperada
diferenca.attention_melhor_que_unet = 0.02; % 2% m√≠nimo

%% CHECKLIST DE VALIDA√á√ÉO

function status = validar_projeto()
    % Validar se projeto est√° √≠ntegro
    
    status = struct();
    status.arquivos_ok = true;
    status.dependencias_ok = true;
    status.configuracao_ok = true;
    
    % Verificar arquivos essenciais
    for i = 1:length(arquivos_essenciais)
        arquivo = arquivos_essenciais{i};
        if ~exist(arquivo, 'file')
            fprintf('‚ùå Arquivo essencial n√£o encontrado: %s\n', arquivo);
            status.arquivos_ok = false;
        end
    end
    
    % Verificar fun√ß√£o principal
    if exist('executar_comparacao.m', 'file')
        fprintf('‚úÖ Script principal encontrado\n');
    else
        fprintf('‚ùå Script principal n√£o encontrado!\n');
        status.arquivos_ok = false;
    end
    
    % Verificar Attention U-Net
    if exist('create_working_attention_unet.m', 'file')
        fprintf('‚úÖ Attention U-Net funcional encontrada\n');
    else
        fprintf('‚ùå Attention U-Net funcional n√£o encontrada!\n');
        status.dependencias_ok = false;
    end
    
    % Verificar configura√ß√£o
    if exist('config_caminhos.mat', 'file')
        fprintf('‚úÖ Configura√ß√£o encontrada\n');
    else
        fprintf('‚ö†Ô∏è Configura√ß√£o n√£o encontrada (ser√° criada na primeira execu√ß√£o)\n');
    end
    
    % Status final
    if status.arquivos_ok && status.dependencias_ok && status.configuracao_ok
        fprintf('‚úÖ PROJETO √çNTEGRO E FUNCIONAL\n');
        status.geral = true;
    else
        fprintf('‚ùå PROJETO COM PROBLEMAS - NECESSITA CORRE√á√ÉO\n');
        status.geral = false;
    end
end

%% INSTRU√á√ïES PARA AI ASSISTANT

instrucoes_ai = {
    '1. SEMPRE ler CONFIG_PROJETO.md antes de qualquer modifica√ß√£o',
    '2. SEMPRE ler este arquivo (CONFIGURACAO_TECNICA.m) para contexto t√©cnico',
    '3. NUNCA criar novos arquivos sem verificar se funcionalidade j√° existe',
    '4. SEMPRE usar grep_search para verificar depend√™ncias antes de deletar',
    '5. SEMPRE testar funcionalidade ap√≥s modifica√ß√µes',
    '6. USAR arquivos existentes como base para modifica√ß√µes',
    '7. DOCUMENTAR mudan√ßas significativas no README.md',
    '8. MANTER o projeto enxuto - evitar duplica√ß√£o de c√≥digo',
    '9. PRIORIZAR funcionalidade sobre complexidade',
    '10. EM CASO DE D√öVIDA, usar implementa√ß√µes mais simples'
};

%% COMANDOS √öTEIS PARA DEBUG

comandos_debug = {
    'executar_comparacao()           % Menu principal',
    'validar_projeto()               % Verificar integridade',
    'load(''config_caminhos.mat'')     % Carregar configura√ß√£o', 
    'dir(''*.m'')                      % Listar arquivos MATLAB',
    'which create_working_attention_unet % Verificar fun√ß√£o',
    'help executar_comparacao        % Ajuda do script principal'
};

fprintf('üìã CONFIGURA√á√ÉO T√âCNICA CARREGADA\n');
fprintf('üìÅ Projeto: %s v%s\n', projeto.nome, projeto.versao);
fprintf('‚úÖ Status: %s\n', projeto.status);
fprintf('üéØ Para validar projeto: validar_projeto()\n');
fprintf('üöÄ Para executar: %s\n', projeto.arquivo_principal);

% ========================================================================
% FIM DA CONFIGURA√á√ÉO T√âCNICA
% ========================================================================
