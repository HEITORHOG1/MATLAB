function inicio_rapido()
    % ========================================================================
    % IN√çCIO R√ÅPIDO - Projeto U-Net vs Attention U-Net
    % ========================================================================
    % 
    % DESCRI√á√ÉO:
    %   Fun√ß√£o de in√≠cio r√°pido que verifica a configura√ß√£o e executa
    %   automaticamente os passos necess√°rios.
    %
    % USO:
    %   >> inicio_rapido()
    %
    % VERS√ÉO: 1.0
    % DATA: Julho 2025
    % ========================================================================
    
    clc;
    fprintf('üöÄ IN√çCIO R√ÅPIDO - U-Net vs Attention U-Net\n');
    fprintf('==========================================\n\n');
    
    % Verificar se a configura√ß√£o existe e √© v√°lida
    if exist('config_caminhos.mat', 'file')
        fprintf('‚úì Configura√ß√£o encontrada!\n');
        
        % Carregar e verificar
        load('config_caminhos.mat', 'config');
        
        if validar_configuracao_rapida(config)
            fprintf('‚úì Configura√ß√£o v√°lida!\n');
            fprintf('  Imagens: %s\n', config.imageDir);
            fprintf('  M√°scaras: %s\n\n', config.maskDir);
            
            % Contar arquivos
            contagem = contar_arquivos(config);
            fprintf('üìä Dados encontrados:\n');
            fprintf('   Imagens: %d arquivos\n', contagem.imagens);
            fprintf('   M√°scaras: %d arquivos\n\n', contagem.mascaras);
            
            if contagem.imagens > 0 && contagem.mascaras > 0
                fprintf('üéØ Tudo pronto! Iniciando execu√ß√£o autom√°tica...\n\n');
                
                % Pausa para o usu√°rio ver as informa√ß√µes
                fprintf('Pressione qualquer tecla para continuar (ou Ctrl+C para cancelar)...\n');
                pause;
                
                % Executar compara√ß√£o autom√°tica
                executar_comparacao_automatica();
                
            else
                fprintf('‚ö†Ô∏è  Nenhum arquivo encontrado nas pastas configuradas.\n');
                fprintf('   Verifique se suas imagens est√£o nos locais corretos.\n\n');
                oferecer_opcoes_sem_dados();
            end
            
        else
            fprintf('‚ùå Configura√ß√£o inv√°lida. Reconfigurando...\n\n');
            reconfigurar();
        end
        
    else
        fprintf('‚öôÔ∏è  Primeira execu√ß√£o detectada. Configurando...\n\n');
        configuracao_inicial_automatica();
        
        fprintf('\nüéØ Configura√ß√£o conclu√≠da! Execute novamente:\n');
        fprintf('   >> inicio_rapido()\n\n');
    end
end

function valido = validar_configuracao_rapida(config)
    % Valida√ß√£o r√°pida da configura√ß√£o
    
    valido = false;
    
    try
        if isfield(config, 'imageDir') && isfield(config, 'maskDir')
            if exist(config.imageDir, 'dir') && exist(config.maskDir, 'dir')
                valido = true;
            end
        end
    catch
        valido = false;
    end
end

function contagem = contar_arquivos(config)
    % Conta arquivos de imagem e m√°scara
    
    contagem = struct();
    
    try
        imgs = dir(fullfile(config.imageDir, '*.{jpg,jpeg,png,bmp,tif,tiff}'));
        masks = dir(fullfile(config.maskDir, '*.{jpg,jpeg,png,bmp,tif,tiff}'));
        
        contagem.imagens = length(imgs);
        contagem.mascaras = length(masks);
    catch
        contagem.imagens = 0;
        contagem.mascaras = 0;
    end
end

function executar_comparacao_automatica()
    % Executa a compara√ß√£o completa automaticamente
    
    fprintf('ü§ñ EXECU√á√ÉO AUTOM√ÅTICA INICIADA\n');
    fprintf('===============================\n\n');
    
    % Carregar configura√ß√£o
    load('config_caminhos.mat', 'config');
    
    % Sequ√™ncia autom√°tica otimizada
    passos = {
        'Testando formato dos dados...', @() teste_dados_segmentacao(config);
        'Executando teste r√°pido...', @() treinar_unet_simples(config);
        'Compara√ß√£o U-Net vs Attention U-Net...', @() comparacao_unet_attention_final(config)
    };
    
    for i = 1:size(passos, 1)
        fprintf('[%d/%d] %s\n', i, size(passos, 1), passos{i, 1});
        
        try
            passos{i, 2}();
            fprintf('‚úì Passo %d conclu√≠do!\n\n', i);
        catch ME
            fprintf('‚ùå Erro no passo %d: %s\n', i, ME.message);
            
            if i == 1
                fprintf('‚ö†Ô∏è  Erro cr√≠tico nos dados. Interrompendo execu√ß√£o.\n');
                fprintf('   Verifique suas imagens e m√°scaras.\n\n');
                return;
            else
                fprintf('‚ö†Ô∏è  Erro n√£o cr√≠tico. Continuando...\n\n');
            end
        end
    end
    
    fprintf('üéâ EXECU√á√ÉO AUTOM√ÅTICA CONCLU√çDA!\n');
    fprintf('=================================\n');
    fprintf('Verifique os resultados salvos em:\n');
    fprintf('- resultados_comparacao.mat\n');
    fprintf('- relatorio_comparacao.txt\n\n');
end

function oferecer_opcoes_sem_dados()
    % Oferece op√ß√µes quando n√£o h√° dados
    
    fprintf('OP√á√ïES DISPON√çVEIS:\n');
    fprintf('==================\n');
    fprintf('1. Verificar configura√ß√£o atual: testar_configuracao()\n');
    fprintf('2. Reconfigurar caminhos: configuracao_inicial_automatica()\n');
    fprintf('3. Configura√ß√£o manual: configurar_caminhos()\n');
    fprintf('4. Menu principal: executar_comparacao()\n\n');
    
    fprintf('DICA: Certifique-se de que seus arquivos est√£o em:\n');
    fprintf('üìÅ Imagens: C:\\Users\\heito\\Pictures\\imagens matlab\\original\n');
    fprintf('üìÅ M√°scaras: C:\\Users\\heito\\Pictures\\imagens matlab\\masks\n\n');
end

function reconfigurar()
    % Reconfigura√ß√£o autom√°tica
    
    fprintf('üîß Iniciando reconfigura√ß√£o...\n\n');
    
    try
        configuracao_inicial_automatica();
        fprintf('‚úì Reconfigura√ß√£o conclu√≠da!\n\n');
    catch ME
        fprintf('‚ùå Erro na reconfigura√ß√£o: %s\n', ME.message);
        fprintf('Execute manualmente: configurar_caminhos()\n\n');
    end
end
