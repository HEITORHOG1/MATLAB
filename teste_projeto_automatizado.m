% TESTE AUTOMATIZADO - VERIFICA√á√ÉO DO PROJETO
%
% Este script verifica se todas as corre√ß√µes foram aplicadas com sucesso
% e se o projeto est√° funcionando corretamente.

fprintf('========================================\n');
fprintf('    TESTE AUTOMATIZADO DO PROJETO\n');
fprintf('========================================\n\n');

% Verificar se os arquivos existem
arquivos_essenciais = {
    'executar_comparacao.m'; ...
    'carregar_dados_robustos.m'; ...
    'configurar_caminhos.m'; ...
    'create_working_attention_unet.m'; ...
    'teste_attention_unet_real.m'; ...
    'comparacao_unet_attention_final.m'; ...
    'treinar_unet_simples.m'; ...
    'teste_dados_segmentacao.m'; ...
    'converter_mascaras.m'; ...
    'analisar_mascaras_automatico.m'; ...
    'preprocessDataMelhorado.m'; ...
    'preprocessDataCorrigido.m'
};

fprintf('1. Verificando arquivos essenciais...\n');
todos_arquivos_ok = true;
for i = 1:length(arquivos_essenciais)
    arquivo = arquivos_essenciais{i};
    if exist(arquivo, 'file')
        fprintf('   ‚úì %s\n', arquivo);
    else
        fprintf('   ‚ùå %s\n', arquivo);
        todos_arquivos_ok = false;
    end
end

% Verificar fun√ß√µes no path
fprintf('\n2. Verificando fun√ß√µes no path do MATLAB...\n');
funcoes_testadas = {
    'carregar_dados_robustos'; ...
    'create_working_attention_unet'; ...
    'teste_attention_unet_real'; ...
    'executar_comparacao'; ...
    'analisar_mascaras_automatico'; ...
    'preprocessDataMelhorado'
};

todas_funcoes_ok = true;
for i = 1:length(funcoes_testadas)
    funcao = funcoes_testadas{i};
    if exist(funcao, 'file')
        fprintf('   ‚úì %s\n', funcao);
    else
        fprintf('   ‚ùå %s\n', funcao);
        todas_funcoes_ok = false;
    end
end

% Testar cria√ß√£o da Attention U-Net
fprintf('\n3. Testando cria√ß√£o da Attention U-Net...\n');
try
    lgraph = create_working_attention_unet([256, 256, 3], 2);
    fprintf('   ‚úì Attention U-Net criada com sucesso\n');
    attention_ok = true;
catch ME
    fprintf('   ‚ùå Erro na cria√ß√£o: %s\n', ME.message);
    attention_ok = false;
end

% Testar script principal (verifica√ß√£o de sintaxe)
fprintf('\n4. Testando script principal...\n');
try
    help executar_comparacao;
    fprintf('   ‚úì Script principal OK\n');
    script_ok = true;
catch ME
    fprintf('   ‚ùå Erro no script: %s\n', ME.message);
    script_ok = false;
end

% Verificar configura√ß√£o salva (se existir)
fprintf('\n5. Verificando configura√ß√£o...\n');
if exist('config_caminhos.mat', 'file')
    try
        load('config_caminhos.mat', 'config');
        fprintf('   ‚úì Configura√ß√£o encontrada\n');
        if isfield(config, 'imageDir') && isfield(config, 'maskDir')
            fprintf('   ‚úì Campos de configura√ß√£o corretos\n');
            config_ok = true;
        else
            fprintf('   ‚ö†Ô∏è Campos de configura√ß√£o incompletos\n');
            config_ok = false;
        end
    catch ME
        fprintf('   ‚ùå Erro ao carregar configura√ß√£o: %s\n', ME.message);
        config_ok = false;
    end
else
    fprintf('   ‚ö†Ô∏è Nenhuma configura√ß√£o encontrada (normal na primeira execu√ß√£o)\n');
    config_ok = true; % N√£o √© um erro cr√≠tico
end

% Resumo final
fprintf('\n========================================\n');
fprintf('             RESUMO DO TESTE\n');
fprintf('========================================\n');

if todos_arquivos_ok
    fprintf('Arquivos essenciais: ‚úÖ OK\n');
else
    fprintf('Arquivos essenciais: ‚ùå PROBLEMAS\n');
end

if todas_funcoes_ok
    fprintf('Fun√ß√µes no path: ‚úÖ OK\n');
else
    fprintf('Fun√ß√µes no path: ‚ùå PROBLEMAS\n');
end

if attention_ok
    fprintf('Attention U-Net: ‚úÖ OK\n');
else
    fprintf('Attention U-Net: ‚ùå PROBLEMAS\n');
end

if script_ok
    fprintf('Script principal: ‚úÖ OK\n');
else
    fprintf('Script principal: ‚ùå PROBLEMAS\n');
end

if config_ok
    fprintf('Configura√ß√£o: ‚úÖ OK\n');
else
    fprintf('Configura√ß√£o: ‚ùå PROBLEMAS\n');
end

% Resultado final
if todos_arquivos_ok && todas_funcoes_ok && attention_ok && script_ok && config_ok
    fprintf('\nüéâ SUCESSO: Projeto est√° funcionando corretamente!\n');
    fprintf('   Todos os problemas foram corrigidos.\n');
    fprintf('   Voc√™ pode executar: executar_comparacao()\n');
else
    fprintf('\n‚ö†Ô∏è ATEN√á√ÉO: Alguns problemas foram encontrados.\n');
    fprintf('   Verifique os itens marcados com ‚ùå acima.\n');
end

fprintf('\n========================================\n\n');
